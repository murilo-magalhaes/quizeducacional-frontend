import { Game } from '@/interfaces/game.interface';
import { ELevel } from '@/interfaces/question.interface';
import { QuestionAlternative } from '@/interfaces/questionAlternative.interface';
import { EGameStatus } from '@/interfaces/gamePlayer.interface';

const mockAlternatives: QuestionAlternative[] = [
  {
    id: 1,
    createdAt: new Date(),
    updatedAt: new Date(),
    status: 'A',
    alternativeId: 1,
    questionId: 1,
    alternative: {
      status: 'A',
      updatedAt: new Date(),
      createdAt: new Date(),
      id: 1,
      contentId: 1,
      alternativeText: '2',
    },
    correct: true,
    forDoubt: false,
    position: 0,
  },
  {
    id: 2,
    createdAt: new Date(),
    updatedAt: new Date(),
    status: 'A',
    alternativeId: 2,
    questionId: 1,
    alternative: {
      status: 'A',
      updatedAt: new Date(),
      createdAt: new Date(),
      id: 2,
      contentId: 1,
      alternativeText: '3',
    },
    correct: false,
    forDoubt: true,
    position: 1,
  },
  {
    id: 3,
    createdAt: new Date(),
    updatedAt: new Date(),
    status: 'A',
    alternativeId: 3,
    questionId: 1,
    alternative: {
      status: 'A',
      updatedAt: new Date(),
      createdAt: new Date(),
      id: 3,
      contentId: 1,
      alternativeText: '4',
    },
    correct: false,
    forDoubt: false,
    position: 2,
  },
  {
    id: 4,
    createdAt: new Date(),
    updatedAt: new Date(),
    status: 'A',
    alternativeId: 4,
    questionId: 1,
    alternative: {
      status: 'A',
      updatedAt: new Date(),
      createdAt: new Date(),
      id: 4,
      contentId: 1,
      alternativeText: '5',
    },
    correct: false,
    forDoubt: false,
    position: 3,
  },
];

export const mockGames: Game[] = [
  {
    content: {
      id: 1,
      createdAt: new Date(),
      updatedAt: new Date(),
      status: 'A',
      subject: {
        id: 1,
        createdAt: new Date(),
        updatedAt: new Date(),
        status: 'A',
        title: 'Matemática',
      },
      title: 'Soma',
      subjectId: 1,
    },
    contentId: 1,
    createdAt: new Date(),
    id: 1,
    qntQuestions: 5,
    questions: [
      {
        status: 'A',
        updatedAt: new Date(),
        createdAt: new Date(),
        id: 1,
        gameId: 1,
        questionId: 1,
        question: {
          id: 1,
          createdAt: new Date(),
          updatedAt: new Date(),
          status: 'A',
          contentId: 1,
          level: ELevel.EASY,
          statement: 'Quanto é 1+1?',
          alternatives: mockAlternatives,
        },
        position: 0,
      },
      {
        status: 'A',
        updatedAt: new Date(),
        createdAt: new Date(),
        id: 2,
        gameId: 1,
        questionId: 1,
        question: {
          id: 2,
          createdAt: new Date(),
          updatedAt: new Date(),
          status: 'A',
          contentId: 1,
          level: ELevel.EASY,
          statement: 'Quanto é 1+2?',
          alternatives: mockAlternatives.map((qa) => {
            return {
              ...qa,
              correct: qa.alternative?.alternativeText === '3',
            };
          }),
        },
        position: 1,
      },
    ],
    status: 'A',
    updatedAt: new Date(),
    players: [
      {
        status: 'A',
        updatedAt: new Date(),
        id: 1,
        createdAt: new Date(),
        gameId: 1,
        playerId: 1,
        gamePlayerStatus: EGameStatus.NOT_STARTED,
        score: 0,
        timeElapsed: 0,
      },
    ],
    playersAnswers: [],
  },
];
